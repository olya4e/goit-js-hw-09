{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SACAC,EAAAF,GAASG,OAAOC,KAAK,CACnBC,MAAO,UA4BT,SAASC,EAAcC,EAAUC,GAc/B,OAbgB,IAAIC,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACaC,KAAKC,SAAW,GAIpCJ,EAAQ,CAAEH,WAAUC,UAGpBG,EAAO,CAAEJ,WAAUC,YAEpBA,MAtCQO,SAASC,cAAc,SAwB/BC,iBAAiB,UAtBH,SAAAC,GACnBA,EAAEC,iBACF,IAAgCC,EAAAF,EAAEG,OAAOC,SAAjCC,EAAwBH,EAAxBZ,MAAOgB,EAAiBJ,EAAjBI,KAAMC,EAAWL,EAAXK,OACjBC,EAAYH,EAAMI,cAChBC,EAAWJ,EAAKG,cAChBE,EAAaJ,EAAOE,cAC1B,GAAID,EAAY,GAAKE,EAAW,GAAKC,GAAc,EACjD3B,EAAAF,GAASG,OAAO2B,QAAS,kCAI3B,IAAK,IAAIC,EAAW,EAAGA,GAAYF,EAAYE,GAAY,EACzDzB,EAAcyB,EAAUL,GACrBM,MAAK,SAAAC,G,IAAG1B,EAAQ0B,EAAR1B,SAAUC,EAAKyB,EAALzB,MACjBN,EAAAF,GAASG,OAAO+B,QAAQ,sBAAqCC,OAAf5B,EAAS,QAAY4B,OAAN3B,EAAM,UAEpE4B,OAAM,SAAAH,G,IAAG1B,EAAQ0B,EAAR1B,SAAUC,EAAKyB,EAALzB,MAClBN,EAAAF,GAASG,OAAO2B,QAAQ,qBAAoCK,OAAf5B,EAAS,QAAY4B,OAAN3B,EAAM,UAEtEkB,GAAaE,K","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nNotiflix.Notify.init({\n  width: '400px',\n});\nconst formEl = document.querySelector('.form');\n\nconst onSubmitForm = e => {\n  e.preventDefault();\n  const { delay, step, amount } = e.target.elements;\n  let delayUser = delay.valueAsNumber;\n  const stepUser = step.valueAsNumber;\n  const amountUser = amount.valueAsNumber;\n  if (delayUser < 0 || stepUser < 0 || amountUser <= 0) {\n    Notiflix.Notify.failure(` Please input valid value`);\n    return;\n  }\n\n  for (let position = 1; position <= amountUser; position += 1) {\n    createPromise(position, delayUser)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(` Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(` Rejected promise ${position} in ${delay}ms`);\n      });\n    delayUser += stepUser;\n  }\n};\nformEl.addEventListener('submit', onSubmitForm);\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n\n      if (shouldResolve) {\n        // Fulfill\n        resolve({ position, delay });\n      } else {\n        // Reject\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n  return promise;\n}\n"],"names":["$iU1Pc","parcelRequire","$parcel$interopDefault","Notify","init","width","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","document","querySelector","addEventListener","e","preventDefault","_elements","target","elements","delay1","step","amount","delayUser","valueAsNumber","stepUser","amountUser","failure","position1","then","param","success","concat","catch"],"version":3,"file":"03-promises.fddf89c7.js.map"}